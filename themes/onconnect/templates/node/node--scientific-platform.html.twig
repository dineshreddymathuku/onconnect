{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<article{{ attributes }}>
  <div{{ content_attributes }}>
    <div class="main-body scientific-platform-body">
      <div class="section-left">  
        {% if  node.body.value %}
          <div class="section-left-content-description"> {{ content.body|raw }}</div>
        {% endif %}
        {% if content.field_data %}
          <div class="data">
            {% for accordionKey, accordion in accordions %}
              <div class="data-accordion" id="{{ accordion.id }}">
                <div class="pillar-title"><h3 class="title">{{ accordion.title }}</h3>
                  <span class="download-pillar">
                    {% if 'restricted' in user.getroles(TRUE) and pageAccess %}
                      <a href="/pillar/download/{{ node.id }}/{{ accordion.targetId }}">{{ "Download pillar"|t }}
                      <img src="/profiles/pfeconconnectpfcom_profile/themes/onconnect/images/icons/download_white.svg"
                           alt="download pillar"></a>
                    {% endif %}
                  </span>
                </div>
                <div class="description">{{ accordion.description|raw }}</div>
                {% if accordion.file %}
                  <span class="file"><a href="/download/data/file/{{ accordion.fileDownload }}"><img
                        src="/profiles/pfeconconnectpfcom_profile/themes/onconnect/images/icons/download_blue.svg"
                        alt="download-icon">Download</a> <span class="pdf">PDF ({{ accordion.fileSize }})</span></span>
                  {% if accordion.show_share %}
                    <span class="share"><a
                        target="_blank"
                        href="mailto:{{ userEmail }}?subject={{ nodeLabel }} - {{ accordion.title }}&body={{ accordion.showUrl }}">
                        <img src="/profiles/pfeconconnectpfcom_profile/themes/onconnect/images/icons/email_blue.svg"
                             alt="email-icon">Share</a></span>
                  {% endif %}
                {% endif %}
              </div>
              <div class="panel-group" id="accordion1" role="tablist" aria-multiselectable="true">
                {% for key, accordionData in accordion.pillar %}
                  {% if accordionData.title %}
                  <div class="panel panel-default">
                    <div role="tab" id="heading{{ accordionKey }}{{ key }}">
                      <h3 class="accordion-title">
                        <a class="click collapsed" role="button" data-toggle="collapse" data-parent="#accordion1"
                           href="#collapse{{ accordionKey }}{{ key }}{{ pillarkey }}">
                          <span class="acordion-title">{{ accordionData.title|raw }}</span>
                          <img class="icon"
                               src="/profiles/pfeconconnectpfcom_profile/themes/onconnect/images/icons/angle-down-arrow.svg"
                               alt="down-arrow-icon">
                        </a>
                      </h3>
                    </div>
                    <div id="collapse{{ accordionKey }}{{ key }}" class="panel-collapse collapse"
                         aria-labelledby="heading{{ accordionKey }}{{ key }}">
                      {% for pillarkey, accordionPillarData in accordionData.data %}
                        {% if accordionPillarData.title %}
                          <div class="panel-group" id="accordion2" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                              {% if accordionPillarData.description %}
                                <div role="tab" id="heading{{ accordionKey }}{{ key }}{{ pillarkey }}">
                                  <div class="accordion-sub-title">
                                    <a class="click collapsed" role="button" data-toggle="collapse"
                                       data-parent="#accordion2"
                                       href="#collapse{{ accordionKey }}{{ key }}{{ pillarkey }}" aria-expanded="false"
                                       aria-controls="collapse{{ accordionKey }}{{ key }}{{ pillarkey }}">
                                      <div class="acordion-sub-title">{{ accordionPillarData.title|raw }}</div>
                                      <img class="icon"
                                           src="/profiles/pfeconconnectpfcom_profile/themes/onconnect/images/icons/angle-down-arrow.svg"
                                           alt="down-arrow-icon">
                                    </a>
                                  </div>
                                </div>
                              {% else %}
                                <div class="accordion-sub-title">
                                  <div class="acordion-title">{{ accordionPillarData.title|raw }}</div>
                                </div>
                              {% endif %}
                              {% if accordionPillarData.description %}
                                <div id="collapse{{ accordionKey }}{{ key }}{{ pillarkey }}"
                                     class="panel-collapse collapse"
                                     role="tabpanel"
                                     aria-labelledby="heading{{ accordionKey }}{{ key }}{{ pillarkey }}">
                                  <div class="panel-body">
                                    {{ accordionPillarData.description|raw }}
                                  </div>
                                </div>
                              {% endif %}
                            </div>
                          </div>
                        {% endif %}
                      {% endfor %}
                    </div>
                  </div>
                  {% endif %}
                {% endfor %}
              </div>
              {% if accordion.note %}
                <div class="note-label">{{ "Note:"|t }}</div>
                <div class="note">{{ accordion.note|raw }}</div>
              {% endif %}
              {% if accordion.references %}
                <div class="references-label">{{ "References"|t }}</div>
                <div class="references">{{ accordion.references|raw }}</div>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>
      <div class="section-right">
        <span class="contents">Contents</span>
        {% for accordion in accordions %}
          <a href="#{{ accordion.id }}">{{ accordion.title }}</a>
        {% endfor %}
      </div>
    </div>
  </div>
</article>